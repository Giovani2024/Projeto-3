### Passo 2: Configuração do Backend

#### `server.js`
```javascript
const express = require('express');
const sqlite3 = require('sqlite3').verbose();
const bodyParser = require('body-parser');
const path = require('path');

const app = express();
const PORT = 3000;

// Configuração do middleware
app.use(bodyParser.json());
app.use(express.static(path.join(__dirname, 'public')));

// Conexão com o banco de dados SQLite
const db = new sqlite3.Database('./database.db', (err) => {
    if (err) {
        console.error('Erro ao conectar no banco de dados', err.message);
    } else {
        console.log('Conectado ao banco de dados SQLite');
    }
});

// Criação da tabela
db.run(`
    CREATE TABLE IF NOT EXISTS keys (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        phone TEXT NOT NULL,
        company TEXT NOT NULL,
        key TEXT NOT NULL
    )
`);

// Rota para registrar dados
app.post('/register', (req, res) => {
    const { name, phone, company, key } = req.body;
    const query = `INSERT INTO keys (name, phone, company, key) VALUES (?, ?, ?, ?)`;

    db.run(query, [name, phone, company, key], function (err) {
        if (err) {
            console.error(err.message);
            return res.status(500).json({ message: 'Erro ao registrar' });
        }
        res.json({ message: 'Registro salvo com sucesso!' });
    });
});

// Inicialização do servidor
app.listen(PORT, () => {
    console.log(`Servidor rodando em http://localhost:${PORT}`);
});
```
